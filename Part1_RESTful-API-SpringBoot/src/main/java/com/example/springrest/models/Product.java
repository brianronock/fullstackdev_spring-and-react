package com.example.springrest.models;

import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import java.math.BigDecimal;

/**
* Represents a product entity in the system.
* This class is used as a data model for API operations involving products.
* */
@Schema(description = "Represents a product entity with details such as unique ID, name, and price.")
@Entity
@Table(name = "products")
@Getter
@Setter
@NoArgsConstructor
public class Product {
    /**
     * Unique identifier for each product
     */
    @Schema(
            description = "The unique ID for the product, auto-generated by the database(auto-increment).",
            example = "1"
    )
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The name of the product
     */
    @Schema(
            description = "The name of the product, must not be blank.",
            example = "Coffee Mug",
            requiredMode = Schema.RequiredMode.REQUIRED
    )
    @NotBlank(message = "Name is mandatory")
    @Column(nullable = false, length = 120)
    private String name;

    /**
     * The price of the product
     */
    @Schema(
            description = "The price of the product, with a precision of 12 digits and 2 decimal places",
            example = "999.99",
            requiredMode = Schema.RequiredMode.REQUIRED
    )
    @NotNull(message = "Price must be provided")
    @Column(nullable = false, precision = 12, scale = 2)
    private BigDecimal price;

    /**
     * Constructs a new Product with the specified name and price
     *
     * @param name  the name of the product
     * @param price the price of the product
     */
    public Product(String name, BigDecimal price) {
        this.name = name;
        this.price = price;
    }
}
